#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Cookie 管理工具

用于查看、删除保存的浏览器 Cookie
"""

import json
import os
import sys
from datetime import datetime

COOKIE_FILE = '.jable_cookies.json'


def show_cookies():
    """显示保存的 Cookie"""
    if not os.path.exists(COOKIE_FILE):
        print("❌ 未找到保存的 Cookie 文件")
        return

    with open(COOKIE_FILE, 'r', encoding='utf-8') as f:
        cookies = json.load(f)

    print("="*60)
    print(f"📦 已保存的 Cookie ({len(cookies)} 个)")
    print("="*60)
    print()

    # 按域名分组
    domains = {}
    for cookie in cookies:
        domain = cookie.get('domain', 'unknown')
        if domain not in domains:
            domains[domain] = []
        domains[domain].append(cookie)

    for domain, domain_cookies in domains.items():
        print(f"🌐 域名: {domain}")
        print(f"   Cookie 数量: {len(domain_cookies)}")
        print()

        for cookie in domain_cookies:
            name = cookie.get('name', 'N/A')
            value = cookie.get('value', '')
            secure = '🔒' if cookie.get('secure', False) else '🔓'
            http_only = 'HTTP-Only' if cookie.get('httpOnly', False) else 'JS可访问'

            # 截断过长的值
            if len(value) > 50:
                value = value[:47] + '...'

            print(f"   {secure} {name}")
            print(f"      值: {value}")
            print(f"      类型: {http_only}")

            # 显示过期时间
            if 'expires' in cookie:
                expires = cookie['expires']
                if expires > 0:
                    # Unix timestamp 转换为日期
                    try:
                        dt = datetime.fromtimestamp(expires)
                        print(f"      过期: {dt.strftime('%Y-%m-%d %H:%M:%S')}")
                    except:
                        print(f"      过期: {expires}")
            print()

    # 显示文件信息
    file_size = os.path.getsize(COOKIE_FILE)
    file_time = datetime.fromtimestamp(os.path.getmtime(COOKIE_FILE))
    print("-"*60)
    print(f"📄 文件: {os.path.abspath(COOKIE_FILE)}")
    print(f"📊 大小: {file_size} 字节")
    print(f"🕐 最后修改: {file_time.strftime('%Y-%m-%d %H:%M:%S')}")


def delete_cookies():
    """删除保存的 Cookie"""
    if not os.path.exists(COOKIE_FILE):
        print("❌ 未找到保存的 Cookie 文件")
        return

    print("⚠️  即将删除保存的 Cookie 文件")
    print(f"   文件: {os.path.abspath(COOKIE_FILE)}")
    print()

    # 确认
    try:
        confirm = input("确定要删除吗？(y/N): ").strip().lower()
        if confirm == 'y' or confirm == 'yes':
            os.remove(COOKIE_FILE)
            print("✅ Cookie 文件已删除")
        else:
            print("❌ 取消删除")
    except KeyboardInterrupt:
        print("\n❌ 取消删除")


def export_cookies():
    """导出 Cookie 为易读格式"""
    if not os.path.exists(COOKIE_FILE):
        print("❌ 未找到保存的 Cookie 文件")
        return

    with open(COOKIE_FILE, 'r', encoding='utf-8') as f:
        cookies = json.load(f)

    # 导出为 Netscape 格式（可用于 curl 等工具）
    output_file = 'jable_cookies_export.txt'

    with open(output_file, 'w', encoding='utf-8') as f:
        f.write("# Netscape HTTP Cookie File\n")
        f.write("# This file was generated by manage_cookies.py\n")
        f.write("# This file can be used with curl: curl -b jable_cookies_export.txt URL\n\n")

        for cookie in cookies:
            domain = cookie.get('domain', '')
            flag = 'TRUE' if domain.startswith('.') else 'FALSE'
            path = cookie.get('path', '/')
            secure = 'TRUE' if cookie.get('secure', False) else 'FALSE'
            expires = int(cookie.get('expires', 0))
            name = cookie.get('name', '')
            value = cookie.get('value', '')

            f.write(f"{domain}\t{flag}\t{path}\t{secure}\t{expires}\t{name}\t{value}\n")

    print(f"✅ Cookie 已导出到: {os.path.abspath(output_file)}")
    print(f"   可用于 curl: curl -b {output_file} <URL>")


def show_help():
    """显示帮助信息"""
    print("Cookie 管理工具")
    print()
    print("用法:")
    print("  python3 manage_cookies.py [命令]")
    print()
    print("命令:")
    print("  show     显示保存的 Cookie（默认）")
    print("  delete   删除保存的 Cookie")
    print("  export   导出 Cookie 为 Netscape 格式")
    print("  help     显示此帮助信息")
    print()
    print("示例:")
    print("  python3 manage_cookies.py")
    print("  python3 manage_cookies.py show")
    print("  python3 manage_cookies.py delete")
    print("  python3 manage_cookies.py export")


def main():
    if len(sys.argv) < 2:
        command = 'show'
    else:
        command = sys.argv[1].lower()

    if command == 'show':
        show_cookies()
    elif command == 'delete':
        delete_cookies()
    elif command == 'export':
        export_cookies()
    elif command == 'help' or command == '-h' or command == '--help':
        show_help()
    else:
        print(f"❌ 未知命令: {command}")
        print()
        show_help()


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n👋 再见！")
    except Exception as e:
        print(f"\n❌ 错误: {str(e)}")
